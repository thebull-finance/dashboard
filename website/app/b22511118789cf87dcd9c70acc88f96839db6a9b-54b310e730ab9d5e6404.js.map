{"version":3,"file":"b22511118789cf87dcd9c70acc88f96839db6a9b-54b310e730ab9d5e6404.js","mappings":"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","sources":["webpack://zignaly-webapp/./src/components/Dashboard/PositionsContext.js","webpack://zignaly-webapp/./src/components/Dashboard/PositionFilters/PositionFilters.js","webpack://zignaly-webapp/./src/components/Dashboard/NoPositions/NoPositions.js","webpack://zignaly-webapp/./src/hooks/usePositionsList.js","webpack://zignaly-webapp/./src/components/Dashboard/PositionsTable/MarginModal/MarginModal.js","webpack://zignaly-webapp/./src/components/Dashboard/PositionsTable/PositionsReportModal/PositionsReportModal.js","webpack://zignaly-webapp/./src/components/Dashboard/PositionsTable/PositionsTable.js","webpack://zignaly-webapp/./node_modules/lodash/_arrayIncludesWith.js","webpack://zignaly-webapp/./node_modules/lodash/_baseFilter.js","webpack://zignaly-webapp/./node_modules/lodash/_baseFlatten.js","webpack://zignaly-webapp/./node_modules/lodash/_baseMap.js","webpack://zignaly-webapp/./node_modules/lodash/_baseOrderBy.js","webpack://zignaly-webapp/./node_modules/lodash/_basePickBy.js","webpack://zignaly-webapp/./node_modules/lodash/_baseSet.js","webpack://zignaly-webapp/./node_modules/lodash/_baseSortBy.js","webpack://zignaly-webapp/./node_modules/lodash/_baseUniq.js","webpack://zignaly-webapp/./node_modules/lodash/_compareAscending.js","webpack://zignaly-webapp/./node_modules/lodash/_compareMultiple.js","webpack://zignaly-webapp/./node_modules/lodash/_createSet.js","webpack://zignaly-webapp/./node_modules/lodash/_isFlattenable.js","webpack://zignaly-webapp/./node_modules/lodash/filter.js","webpack://zignaly-webapp/./node_modules/lodash/negate.js","webpack://zignaly-webapp/./node_modules/lodash/omitBy.js","webpack://zignaly-webapp/./node_modules/lodash/pickBy.js","webpack://zignaly-webapp/./node_modules/lodash/sortBy.js","webpack://zignaly-webapp/./node_modules/lodash/uniqBy.js"],"sourcesContent":["import React from \"react\";\n\n/**\n * @typedef {Object} PositionsContextObject\n * @property {number} openCount\n * @property {number} closeCount\n * @property {number} logCount\n * @property {React.SetStateAction<*>} setOpenCount\n * @property {React.SetStateAction<*>} setCloseCount\n * @property {React.SetStateAction<*>} setLogCount\n */\n\nexport default React.createContext(/** @type {Partial<PositionsContextObject>} **/ ({}));\n","import React from \"react\";\nimport CustomFilters from \"../../CustomFilters\";\nimport CustomSelect from \"../../CustomSelect\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\n\n/**\n * @typedef {import(\"../../../services/tradeApiClient.types\").UserPositionsCollection} UserPositionsCollection\n * @typedef {import(\"react\").MouseEventHandler} MouseEventHandler\n * @typedef {import(\"../../CustomSelect/CustomSelect\").OptionType} OptionType\n * @typedef {import(\"../../../store/initialState\").DashboardPositionsFilters} DashboardPositionsFilters\n */\n\n/**\n * @typedef {Object} PositionFiltersPropTypes\n * @property {Function} onChange Callback to broadcast filters changes to caller.\n * @property {boolean} showTypesFilter Flag to indicate whether types dropdown filter display or not.\n * @property {DashboardPositionsFilters} filters Current filters.\n * @property {function} clearFilters Callback that delegate filters clearing to caller.\n * @property {Array<OptionType>} pairOptions Pair options.\n * @property {Array<OptionType>} providerOptions Providers options.\n * @property {Array<OptionType>} types Types options.\n * @property {Array<OptionType>} sides Sides options.\n */\n\n/**\n * Provides filters for filtering positions.\n *\n * @param {PositionFiltersPropTypes} props Component properties.\n * @returns {JSX.Element} Component JSX.\n */\nconst PositionFilters = (props) => {\n  const { filters, onChange, showTypesFilter, providerOptions, pairOptions, types, sides } = props;\n\n  /**\n   * Set provider filter value.\n   *\n   * @param {string} value Selected provider value.\n   * @returns {Void} None.\n   */\n  const setProvider = (value) => {\n    onChange({\n      providerId: value,\n    });\n  };\n\n  /**\n   * Set side filter value.\n   *\n   * @param {string} value Selected side value.\n   * @returns {Void} None.\n   */\n  const setSide = (value) => {\n    onChange({\n      side: value,\n    });\n  };\n\n  /**\n   * Set status filter value.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} e Change event.\n   * @returns {Void} None.\n   */\n  const setStatus = (e) => {\n    const target = e.currentTarget;\n    onChange({\n      status: target.checked ? \"all\" : \"\",\n    });\n  };\n\n  /**\n   * Set type filter value.\n   *\n   * @param {string} value Selected type value.\n   * @returns {Void} None.\n   */\n  const setType = (value) => {\n    onChange({\n      type: value,\n    });\n  };\n\n  return (\n    <CustomFilters title=\"Filters\">\n      {showTypesFilter && (\n        <CustomSelect label=\"\" onChange={setType} options={types} value={filters.type} />\n      )}\n      <CustomSelect\n        label=\"\"\n        onChange={setProvider}\n        options={providerOptions}\n        value={filters.providerId}\n      />\n      <CustomSelect\n        label=\"\"\n        onChange={(/** @type {OptionType} */ v) => onChange({ pair: v.val })}\n        options={pairOptions}\n        search={true}\n        value={filters.pair}\n      />\n      <CustomSelect label=\"\" onChange={setSide} options={sides} value={filters.side} />\n      {showTypesFilter && (\n        <Box alignItems=\"center\" className=\"coinsFilter\" display=\"flex\" flexDirection=\"row\">\n          <Checkbox\n            checked={filters.status === \"all\"}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            onChange={setStatus}\n          />\n          <FormattedMessage id=\"positions.log.filter.status\" />\n        </Box>\n      )}\n    </CustomFilters>\n  );\n};\n\nexport default PositionFilters;\n","import React from \"react\";\nimport \"./NoPositions.scss\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport CustomButton from \"../../CustomButton\";\nimport { navigate } from \"gatsby\";\n\n/**\n * @typedef {import(\"../../../hooks/usePositionsList\").PositionsCollectionType} PositionsCollectionType\n */\n\n/**\n * @typedef {Object} DefaultProps\n * @property {Boolean} [isProfile]\n * @property {PositionsCollectionType} type\n */\n\n/**\n * Component displayed when there are no positions.\n *\n * @param {DefaultProps} props Default component props.\n * @returns {JSX.Element} JSX component.\n */\nconst NoPositions = ({ isProfile, type }) => {\n  const redirect = () => {\n    navigate(\"/profitSharing\");\n  };\n\n  const emptyMessage = () => {\n    switch (type) {\n      case \"open\":\n        return \"dashboard.positions.nopositions.open\";\n      case \"closed\":\n        return \"dashboard.positions.nopositions.closed\";\n      case \"log\":\n        return \"dashboard.positions.nopositions.log\";\n      case \"profileOpen\":\n        return \"dashboard.positions.nopositions.profileOpen\";\n      case \"profileClosed\":\n        return \"dashboard.positions.nopositions.profileClosed\";\n      default:\n        return \"dashboard.positions.nopositions.open\";\n    }\n  };\n\n  return (\n    <Box\n      alignItems=\"center\"\n      className=\"noPositions\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n    >\n      <Typography variant=\"h3\">\n        <FormattedMessage id={emptyMessage()} />\n      </Typography>\n      {!isProfile && (\n        <CustomButton className=\"submitButton\" onClick={redirect}>\n          <FormattedMessage id=\"dashboard.browsetraders\" />\n        </CustomButton>\n      )}\n    </Box>\n  );\n};\n\nexport default NoPositions;\n","import { useState, useEffect, useRef } from \"react\";\nimport tradeApi from \"../services/tradeApiClient\";\nimport useInterval from \"./useInterval\";\nimport {\n  assign,\n  cloneDeep,\n  filter,\n  isEmpty,\n  isFunction,\n  omitBy,\n  partial,\n  sortBy,\n  uniqBy,\n} from \"lodash\";\nimport useStoreSettingsSelector from \"./useStoreSettingsSelector\";\nimport useSelectedExchange from \"hooks/useSelectedExchange\";\nimport { useDispatch } from \"react-redux\";\nimport { showErrorAlert } from \"../store/actions/ui\";\nimport useStoreViewsSelector from \"./useStoreViewsSelector\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useFilters from \"./useFilters\";\n\n/**\n * @typedef {import(\"../services/tradeApiClient.types\").UserPositionsCollection} UserPositionsCollection\n * @typedef {\"open\" | \"closed\" | \"log\" | \"profileOpen\" | \"profileClosed\"} PositionsCollectionType\n * @typedef {import('../components/CustomSelect/CustomSelect').OptionType} OptionType\n * @typedef {import(\"../store/initialState\").Filters} Filters\n * @typedef {Object<string, boolean>} UpdatingIndex\n */\n\n/**\n * @typedef {Object} HookPositionsListData\n * @property {UserPositionsCollection} positionsAll\n * @property {UserPositionsCollection} positionsFiltered\n * @property {Function} setFilters\n * @property {function} clearFilters\n * @property {Boolean} loading\n * @property {Function} flagPositionUpdating\n * @property {Boolean} filtersVisibility\n * @property {Function} setFiltersVisibility\n * @property {Filters['dashboardPositions']} filters\n * @property {number} modifiedFilters\n * @property {Array<OptionType>} providerOptions\n * @property {Array<OptionType>} pairOptions\n * @property {Array<OptionType>} sides\n * @property {Array<OptionType>} types\n */\n\n/**\n * @typedef {Object} PositionsState\n * @property {UserPositionsCollection} open\n * @property {UserPositionsCollection} closed\n * @property {UserPositionsCollection} log\n * @property {UserPositionsCollection} profileOpen\n * @property {UserPositionsCollection} profileClosed\n */\n\n/**\n * Provides positions data load by collection type.\n *\n * Encapsulates the data fetch from Trade API and local state handling.\n *\n * @param {PositionsCollectionType} type Collection type to fetch.\n * @param {Position|null} [positionEntity] Position entity (optional) to narrow data to single position.\n * @param {function} [notifyPositionsUpdate] Callback to notify the updated positions list.\n * @param {\"dashboardPositions\"} [persistKey] Key to persist filters to store.\n * @returns {HookPositionsListData} Positions collection.\n */\nconst usePositionsList = (\n  type,\n  positionEntity = null,\n  notifyPositionsUpdate = null,\n  persistKey,\n) => {\n  const typeRef = useRef(null);\n  const storeSettings = useStoreSettingsSelector();\n  const selectedExchange = useSelectedExchange();\n  const storeViews = useStoreViewsSelector();\n  const exchangeRef = useRef(selectedExchange.exchangeId);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"), {\n    // Fix wrong value at first render\n    noSsr: true,\n  });\n\n  /**\n   * Track the position IDs that have performed an open position update action.\n   */\n  const [updatingIndex, setUpdatingIndex] = useState(\n    /** @type {UpdatingIndex} updatingIndex */ ({}),\n  );\n\n  /**\n   * @type {PositionsState}\n   */\n  const defaultPositionsState = {\n    open: null,\n    closed: null,\n    log: null,\n    profileOpen: null,\n    profileClosed: null,\n  };\n  const [positions, setPositions] = useState(defaultPositionsState);\n  const positionsAll = positions[type] || [];\n  const [filtersVisibility, setFiltersVisibility] = useState(!isMobile);\n\n  const extractPairOptions = () => {\n    const coinsDistinct = uniqBy(positionsAll, \"pair\").map((position) => {\n      return { label: position.pair, val: position.pair };\n    });\n\n    return [{ label: \"All Pairs\", val: \"all\" }].concat(sortBy(coinsDistinct, \"label\"));\n  };\n\n  const extractProviderOptions = () => {\n    const providersDistinct = uniqBy(positionsAll, \"providerName\").map((position) => {\n      return {\n        label: position.providerName,\n        val: position.providerId,\n      };\n    });\n\n    return [{ label: \"All Providers\", val: \"all\" }].concat(sortBy(providersDistinct, \"label\"));\n  };\n\n  const pairOptions = extractPairOptions();\n  const sides = [\n    { label: \"All Sides\", val: \"all\" },\n    { label: \"SHORT\", val: \"SHORT\" },\n    { label: \"LONG\", val: \"LONG\" },\n  ];\n\n  const types = [\n    { label: \"All Types\", val: \"all\" },\n    { label: \"UNSOLD\", val: \"unsold\" },\n    { label: \"UNOPEN\", val: \"unopen\" },\n  ];\n\n  const providerOptions = extractProviderOptions();\n\n  const storeFilters = storeSettings.filters[persistKey];\n  const defaultFilters = {\n    providerId: \"all\",\n    pair: \"all\",\n    side: \"all\",\n    type: \"all\",\n    status: \"\",\n  };\n  const optionsFilters = {\n    providerId: providerOptions,\n    pair: pairOptions,\n    side: sides,\n    type: types,\n  };\n\n  const res = useFilters(defaultFilters, storeFilters, optionsFilters, persistKey);\n  const { setFilters, clearFilters, modifiedFilters } = res;\n  /**\n   * @type {Filters[typeof persistKey]}\n   */\n  // @ts-ignore\n  const filters = res.filters;\n\n  const statusRef = useRef(filters.status);\n\n  /**\n   * Resolve a Trade API fetch method to fetch positions of a given category.\n   *\n   * @returns {Promise<UserPositionsCollection>} Promise method when category mapping is resolved, empty promise otherwise.\n   */\n  const routeFetchMethod = () => {\n    const payload = {\n      internalExchangeId: selectedExchange.internalId,\n    };\n\n    const providerId = storeViews.provider.id;\n\n    // Skip request if required parameters is empty.\n    if (!isEmpty(payload.internalExchangeId) || !isEmpty(providerId)) {\n      if (positionEntity) {\n        // On first load rely on position entity passed by parent to avoid extra request.\n        return new Promise((resolve) => {\n          resolve([positionEntity]);\n        });\n      } else if (type === \"closed\") {\n        return tradeApi.closedPositionsGet(payload);\n      } else if (type === \"log\") {\n        if (filters.status === \"all\") {\n          return tradeApi.logPositionsGet({ ...payload, extendedStatuses: true });\n        }\n\n        return tradeApi.logPositionsGet(payload);\n      } else if (type === \"open\") {\n        return tradeApi.openPositionsGet(payload);\n      } else if (type === \"profileOpen\") {\n        return tradeApi.providerOpenPositions(providerId);\n      } else if (type === \"profileClosed\") {\n        return tradeApi.providerSoldPositions(providerId);\n      }\n    }\n\n    // Fallback to null promise when method not resolved.\n    return new Promise((resolve) => {\n      resolve(null);\n    });\n  };\n\n  /**\n   * Filter positions list by filters criteria.\n   *\n   * @param {UserPositionsCollection} filterPositions Positions collection.\n   * @returns {UserPositionsCollection} Filtered positions collection.\n   */\n  const filterData = (filterPositions) => {\n    /**\n     * Checks if value equals to \"all\".\n     *\n     * @param {string|OptionType} value Value to check.\n     * @returns {boolean} TRUE when equals, FALSE otherwise.\n     */\n    const isAll = (value) => {\n      if (typeof value === \"object\") {\n        return value.val === \"all\";\n      }\n      return value === \"all\" || value === \"\";\n    };\n    let filterValues = omitBy(filters, isAll);\n\n    // Only use the type filter on log positions table.\n    if (type !== \"log\") {\n      delete filterValues.type;\n    }\n    const matches = filter(filterPositions, filterValues);\n\n    return /** @type {UserPositionsCollection} */ (matches);\n  };\n\n  /**\n   * Prepare new positions state, clearing any previous state when needed.\n   *\n   * @param {string} initiatorExchangeInternalId Exchange that was selected at the moment when fetch was triggered.\n   * @returns {PositionsState} Positions state.\n   */\n  const prepareNewPositionsState = (initiatorExchangeInternalId) => {\n    let newPositions = { ...positions };\n    // Reset new positions state on exchange change.\n    if (exchangeRef.current !== initiatorExchangeInternalId) {\n      newPositions = cloneDeep(defaultPositionsState);\n      exchangeRef.current = selectedExchange.internalId;\n    }\n\n    // Only show loader at initial load to avoid loader experience disruption on updates.\n    if (newPositions[type] === null) {\n      setLoading(true);\n    }\n\n    if (statusRef.current !== filters.status) {\n      setLoading(true);\n      statusRef.current = filters.status;\n    }\n\n    return newPositions;\n  };\n\n  /**\n   * Get all statuses log positions.\n   *\n   * Fallback request when reduced statuses requests don't retrieved positions.\n   *\n   * @returns {Promise<UserPositionsCollection|null>} All statuses log positions.\n   */\n  const fallbackLogPositionsAllStatuses = async () => {\n    let requestData = null;\n    const payload = {\n      internalExchangeId: selectedExchange.internalId,\n    };\n\n    try {\n      requestData = await tradeApi.logPositionsGet({ ...payload, extendedStatuses: true });\n      // If got results, activate all statuses checkbox.\n      if (!isEmpty(requestData)) {\n        setFilters({\n          ...filters,\n          status: \"all\",\n        });\n      }\n    } catch (e) {\n      dispatch(showErrorAlert(e));\n    }\n\n    return requestData;\n  };\n\n  /**\n   * Load user positions for a given exchange.\n   *\n   * @param {string} initiatorExchangeInternalId Exchange that was selected at the moment when fetch was triggered.\n   * @returns {function():void} Effect clean callback.\n   */\n  const loadPositions = (initiatorExchangeInternalId) => {\n    let cancel = false;\n    const fetchMethod = routeFetchMethod();\n    const newPositions = prepareNewPositionsState(initiatorExchangeInternalId);\n    // Check to prevent other tabs / exchanages leftover requests race condition\n    // that override current tab data.\n    const isOriginalInitiator = () => {\n      return (\n        !cancel &&\n        (!typeRef.current || typeRef.current === type) &&\n        (!exchangeRef.current || exchangeRef.current === initiatorExchangeInternalId)\n      );\n    };\n\n    if (fetchMethod) {\n      fetchMethod\n        .then(async (fetchData) => {\n          if (isOriginalInitiator()) {\n            newPositions[type] = fetchData;\n            if (type === \"log\" && filters.status === \"\" && isEmpty(fetchData)) {\n              newPositions[type] = (await fallbackLogPositionsAllStatuses()) || [];\n            }\n\n            if (type === \"open\") {\n              newPositions[type] = mutateUpdatingPositions(newPositions[type]);\n            }\n\n            setPositions(newPositions);\n            if (isFunction(notifyPositionsUpdate)) {\n              notifyPositionsUpdate(newPositions[type]);\n            }\n          }\n        })\n        .catch((e) => {\n          if (isOriginalInitiator()) {\n            if (e.code === 18 || e.code === 12) {\n              newPositions[type] = [];\n              setPositions(newPositions);\n            } else {\n              dispatch(showErrorAlert(e));\n            }\n          }\n        })\n        .finally(() => {\n          if (isOriginalInitiator()) {\n            setLoading(false);\n          }\n        });\n    }\n\n    return () => {\n      cancel = true;\n    };\n  };\n\n  const loadPositionsForExchange = partial(loadPositions, selectedExchange.internalId);\n  useEffect(loadPositionsForExchange, [type, filters.status, selectedExchange.internalId]);\n\n  /**\n   * Load a specific position by ID.\n   *\n   * @param {string} initiatorExchangeInternalId Exchange that was selected at the moment when fetch was triggered.\n   * @returns {boolean} false in case that required parameter was missing, true otherwise.\n   */\n  const loadPosition = (initiatorExchangeInternalId) => {\n    const payload = {\n      positionId: positionEntity.positionId,\n      internalExchangeId: selectedExchange.internalId,\n    };\n\n    // Skip request if required parameters are empty.\n    if (isEmpty(payload.internalExchangeId) || isEmpty(positionEntity.positionId)) {\n      return false;\n    }\n\n    tradeApi\n      .positionGet(payload)\n      .then((data) => {\n        const newPositions = {\n          ...prepareNewPositionsState(initiatorExchangeInternalId),\n          [type]: [data],\n        };\n        // If current position status type changes we need to update where its stored\n        if ([\"open\", \"log\", \"closed\"].includes(data.type) && data.type !== type) {\n          // @ts-ignore\n          newPositions[data.type] = [data];\n        }\n        setPositions(newPositions);\n\n        // if (type === \"open\") {\n        //   newPositions[type] = mutateUpdatingPositions(newPositions[type]);\n        // }\n\n        if (isFunction(notifyPositionsUpdate)) {\n          notifyPositionsUpdate(newPositions[type]);\n        }\n      })\n      .catch((e) => {\n        dispatch(showErrorAlert(e));\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    return true;\n  };\n\n  const loadPositionForExchange = partial(loadPosition, selectedExchange.internalId);\n  const updateData = () => {\n    // Only open positions needs continuos updates.\n    if (type === \"open\" || type === \"profileOpen\") {\n      // Single position update.\n      if (positionEntity) {\n        loadPositionForExchange();\n      } else {\n        // Multiples position update.\n        loadPositionsForExchange();\n      }\n    }\n  };\n  useInterval(updateData, 10000, true);\n\n  const handlePositionTypeChange = () => {\n    typeRef.current = type;\n  };\n  useEffect(handlePositionTypeChange, [type]);\n\n  /**\n   * Mutate those that started an update action as with updating flag.\n   *\n   * @param {UserPositionsCollection} currentPositionsCollection Current positions collection.\n   * @returns {UserPositionsCollection} Mutated updating flag positions collection.\n   */\n  const mutateUpdatingPositions = (currentPositionsCollection) => {\n    return currentPositionsCollection.map((position) => {\n      if (updatingIndex[position.positionId]) {\n        return { ...position, updating: true };\n      }\n\n      return position;\n    });\n  };\n\n  /**\n   * Flag a given position as updating.\n   *\n   * @param {string} positionId Position ID to flag.\n   * @returns {Void} None.\n   */\n  const flagPositionUpdating = (positionId) => {\n    // Add to updating index so this state persists even when backend have not\n    // started to process and avoid that duplicated actions are performed.\n    if (!updatingIndex[positionId]) {\n      const newUpdatingIndex = { [positionId]: true };\n      // Combine with others IDs that exists in current index state.\n      setUpdatingIndex(assign(updatingIndex, newUpdatingIndex));\n    }\n\n    if (positions[type]) {\n      const newPositions = mutateUpdatingPositions(positions[type]);\n      setPositions({ ...positions, [type]: newPositions });\n    }\n  };\n\n  return {\n    positionsAll,\n    positionsFiltered: filterData(positions[type] || []),\n    setFilters,\n    filters,\n    clearFilters,\n    modifiedFilters,\n    loading: loading,\n    flagPositionUpdating,\n    filtersVisibility,\n    setFiltersVisibility,\n    providerOptions,\n    pairOptions,\n    types,\n    sides,\n  };\n};\n\nexport default usePositionsList;\n","import React, { useState } from \"react\";\nimport CustomButton from \"../../../CustomButton\";\nimport tradeApiClient from \"services/tradeApiClient\";\nimport useSelectedExchange from \"hooks/useSelectedExchange\";\nimport { showErrorAlert, showSuccessAlert } from \"store/actions/ui\";\nimport { useDispatch } from \"react-redux\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport {\n  Tabs,\n  Tab,\n  Box,\n  OutlinedInput,\n  Typography,\n  InputAdornment,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport \"./MarginModal.scss\";\nimport { formatNumber } from \"utils/formatters\";\nimport useBalance from \"hooks/useBalance\";\n\n/**\n * @typedef {Object} MarginModalProps\n * @property {Position} position\n * @property {function} onClose\n */\n/**\n * Display modal to adjust position margin.\n *\n * @param {MarginModalProps} props Component properties.\n * @returns {JSX.Element} JSX.\n */\nconst MarginModal = ({ position, onClose }) => {\n  const [mode, setMode] = useState(\"ADD\");\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const selectedExchange = useSelectedExchange();\n  const intl = useIntl();\n  const { register, handleSubmit, errors } = useForm();\n  const { balance, balanceLoading } = useBalance(selectedExchange.internalId);\n  const maxRemoveableMargin =\n    position.margin -\n    (position.positionSizeQuote + position.unrealizedProfitLosses + position.profit);\n\n  /**\n   * @param {React.ChangeEvent} event .\n   * @param {string} newValue .\n   * @returns {void}\n   */\n  const handleModeChange = (event, newValue) => {\n    setMode(newValue);\n  };\n\n  /**\n   * @typedef {Object} FormData\n   * @prop {string} amount\n   */\n\n  /**\n   * @param {FormData} data .\n   * @returns {void}\n   */\n  const onSubmit = (data) => {\n    const { amount } = data;\n    const payload = {\n      internalExchangeId: selectedExchange.internalId,\n      positionId: position.positionId,\n      amount: parseFloat(amount) * (mode === \"ADD\" ? 1 : -1),\n    };\n    setLoading(true);\n\n    tradeApiClient\n      .transferMargin(payload)\n      .then(() => {\n        dispatch(showSuccessAlert(\"\", intl.formatMessage({ id: \"margin.success\" })));\n        onClose();\n      })\n      .catch((e) => {\n        dispatch(showErrorAlert(e));\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <form className=\"marginModal\" onSubmit={handleSubmit(onSubmit)}>\n      <Tabs\n        aria-label=\"Margin Tabs\"\n        className=\"tabs\"\n        classes={{ flexContainer: \"marginTabsContainer\" }}\n        onChange={handleModeChange}\n        value={mode}\n      >\n        <Tab\n          classes={{ selected: \"selected\" }}\n          label={intl.formatMessage({ id: \"margin.add\" })}\n          value=\"ADD\"\n        />\n        <Tab\n          classes={{ selected: \"selected\" }}\n          label={intl.formatMessage({ id: \"margin.remove\" })}\n          value=\"REMOVE\"\n        />\n      </Tabs>\n\n      {balanceLoading && (\n        <Box\n          alignItems=\"center\"\n          className=\"loadingBox\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n        >\n          <CircularProgress color=\"primary\" size={35} />\n        </Box>\n      )}\n      {!balanceLoading && (\n        <Box className=\"marginBox\">\n          <Box className=\"amountInput\" display=\"flex\" flexDirection=\"row\">\n            <OutlinedInput\n              className=\"customInput\"\n              endAdornment={<InputAdornment position=\"end\">XBT</InputAdornment>}\n              error={Boolean(errors.amount)}\n              inputProps={{\n                min: 0,\n                step: \"any\",\n              }}\n              inputRef={register({\n                validate: (value) =>\n                  !isNaN(value) &&\n                  parseFloat(value) >= 0 &&\n                  parseFloat(value) < balance.totalAvailableBTC,\n              })}\n              // doesn't work with mui for some reason?\n              // inputRef={register({\n              //   required: true,\n              //   min: 0,\n              //   max: balance.totalAvailableBTC,\n              // })}\n              name=\"amount\"\n              placeholder={intl.formatMessage({ id: \"withdraw.amount\" })}\n              type=\"number\"\n            />\n          </Box>\n          <Box className=\"line\" display=\"flex\" justifyContent=\"center\">\n            <Typography className=\"callout1\">\n              <FormattedMessage id=\"margin.current\" />: {formatNumber(position.margin)} XBT\n            </Typography>\n          </Box>\n          <Box className=\"line\" display=\"flex\" justifyContent=\"center\">\n            {mode === \"ADD\" ? (\n              <Typography className=\"callout1\">\n                <FormattedMessage id=\"deposit.available\" />:{\" \"}\n                {formatNumber(balance.totalAvailableBTC)} XBT\n              </Typography>\n            ) : (\n              <Typography className=\"callout1\">\n                <FormattedMessage id=\"margin.maxremoveable\" />:{\" \"}\n                {formatNumber(maxRemoveableMargin <= 0 ? 0 : maxRemoveableMargin)}\n                XBT\n              </Typography>\n            )}\n          </Box>\n        </Box>\n      )}\n\n      <CustomButton\n        className=\"submitButton\"\n        disabled={balanceLoading || loading || (mode === \"REMOVE\" && maxRemoveableMargin <= 0)}\n        loading={loading}\n        type=\"submit\"\n      >\n        <FormattedMessage id=\"confirm.accept\" />\n      </CustomButton>\n    </form>\n  );\n};\n\nexport default MarginModal;\n","import React, { useState } from \"react\";\nimport \"./PositionsReportModal.scss\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport CustomButton from \"../../../CustomButton\";\n\n/**\n * @typedef {Object} DefaultProps\n * @property {Function} onClose\n * @property {Function} onSuccess\n */\n\n/**\n * Provides the navigation bar for the dashboard.\n *\n * @param {DefaultProps} props Default props\n * @returns {JSX.Element} Component JSX.\n */\nconst PositionsReportModal = ({ onClose, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleSuccess = () => {\n    onSuccess();\n    setLoading(true);\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Box\n      alignItems=\"flex-start\"\n      className=\"positionsReportModal\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Typography variant=\"h3\">\n        <FormattedMessage id=\"position.report.title\" />\n      </Typography>\n\n      <Typography variant=\"body1\">\n        <FormattedMessage id=\"position.report.message\" />\n      </Typography>\n\n      <Box\n        alignItems=\"space-between\"\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"flex-end\"\n        minWidth=\"100%\"\n      >\n        <CustomButton className=\"textPurple\" onClick={handleClose}>\n          <FormattedMessage id=\"action.cancel\" />\n        </CustomButton>\n        <CustomButton className=\"textPurple\" loading={loading} onClick={handleSuccess}>\n          <FormattedMessage id=\"action.proceed\" />\n        </CustomButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PositionsReportModal;\n","import React, { useContext, useState } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Table from \"../../Table\";\nimport { ConfirmDialog } from \"../../Dialogs\";\nimport tradeApi from \"../../../services/tradeApiClient\";\nimport PositionFilters from \"../PositionFilters\";\nimport NoPositions from \"../NoPositions\";\nimport usePositionsList from \"../../../hooks/usePositionsList\";\nimport useSelectedExchange from \"hooks/useSelectedExchange\";\nimport { showErrorAlert, showSuccessAlert } from \"../../../store/actions/ui\";\nimport { usePositionDataTableCompose } from \"../../../hooks/usePositionsDataTableCompose\";\nimport { useStoreUserData } from \"../../../hooks/useStoreUserSelector\";\nimport \"./PositionsTable.scss\";\nimport { useIntl } from \"react-intl\";\nimport PositionsContext from \"../PositionsContext\";\nimport Modal from \"../../Modal\";\nimport MarginModal from \"./MarginModal\";\nimport PositionsReportModal from \"./PositionsReportModal\";\n\n/**\n * @typedef {import(\"../../../services/tradeApiClient.types\").UserPositionsCollection} UserPositionsCollection\n * @typedef {import(\"../../../utils/composePositionsDataTable\").DataTableContent} DataTableContent\n * @typedef {import(\"../../../hooks/usePositionsList\").PositionsCollectionType} PositionsCollectionType\n * @typedef {import(\"../../../services/tradeApiClient.types\").DefaultProviderGetObject} ProviderEntity\n * @typedef {import(\"mui-datatables\").MUIDataTableOptions} MUIDataTableOptions\n */\n\n/**\n * @typedef {Object} PositionsTableProps\n * @property {PositionsCollectionType} type\n * @property {Position} [positionEntity]\n * @property {function} [notifyPositionsUpdate]\n * @property {Boolean} [isProfile]\n */\n\n/**\n * Component that display user positions in table view.\n *\n * @param {PositionsTableProps} props Component properties.\n * @returns {JSX.Element} Positions table element.\n */\nconst PositionsTable = (props) => {\n  const { type, isProfile, positionEntity = null, notifyPositionsUpdate = null } = props;\n  const { setOpenCount, setCloseCount, setLogCount } = useContext(PositionsContext);\n  const selectedExchange = useSelectedExchange();\n  const userData = useStoreUserData();\n  const dispatch = useDispatch();\n  const persistKey = !isProfile && !positionEntity ? \"dashboardPositions\" : null;\n  const {\n    flagPositionUpdating,\n    positionsAll,\n    positionsFiltered,\n    setFilters,\n    filters,\n    loading,\n    filtersVisibility,\n    setFiltersVisibility,\n    clearFilters,\n    providerOptions,\n    pairOptions,\n    types,\n    sides,\n    modifiedFilters,\n  } = usePositionsList(type, positionEntity, notifyPositionsUpdate, persistKey);\n  // Show option to display all error logs for admins\n  const showTypesFilter = type === \"log\" && userData.isAdmin;\n  const { formatMessage } = useIntl();\n  const [marginPosition, setMarginPosition] = useState(null);\n  const [processingReports, setProcessingReports] = useState(false);\n  const [reportModal, setReportModal] = useState(false);\n\n  const toggleFilters = () => {\n    setFiltersVisibility(!filtersVisibility);\n  };\n\n  const getTablePersistKey = () => {\n    // Use different persist key to edit position table to support different default columns.\n    if (type === \"open\" && positionEntity) {\n      return `${type}EditPositions`;\n    }\n\n    return `${type}Positions`;\n  };\n  const tablePersistsKey = getTablePersistKey();\n\n  /**\n   * @typedef {import(\"../../Dialogs/ConfirmDialog/ConfirmDialog\").ConfirmDialogConfig} ConfirmDialogConfig\n   * @type {ConfirmDialogConfig} initConfirmConfig\n   */\n  const initConfirmConfig = {\n    titleTranslationId: \"\",\n    messageTranslationId: \"\",\n    visible: false,\n  };\n\n  const [confirmConfig, setConfirmConfig] = useState(initConfirmConfig);\n  const [actionData, setActionData] = useState({\n    positionId: \"\",\n    action: \"\",\n  });\n\n  /**\n   * Handle action element click event.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement>} event Action element click.\n   * @returns {Void} None.\n   */\n  const confirmAction = (event) => {\n    const targetElement = event.currentTarget;\n    const positionId = targetElement.getAttribute(\"data-position-id\");\n    const action = targetElement.getAttribute(\"data-action\");\n    setActionData({\n      action: action || \"\",\n      positionId: positionId || \"\",\n    });\n\n    if (action === \"cancel\") {\n      setConfirmConfig({\n        titleTranslationId: \"confirm.positioncancel.title\",\n        messageTranslationId: \"confirm.positioncancel.message\",\n        visible: true,\n      });\n    }\n\n    if (action === \"abort\") {\n      setConfirmConfig({\n        titleTranslationId: \"confirm.positionabort.title\",\n        messageTranslationId: \"confirm.positionabort.message\",\n        visible: true,\n      });\n    }\n\n    if (action === \"exit\") {\n      setConfirmConfig({\n        titleTranslationId: \"confirm.positionexit.title\",\n        messageTranslationId: \"confirm.positionexit.message\",\n        visible: true,\n      });\n    }\n  };\n\n  /**\n   * Handle confirm dialog post confirmation, action execution.\n   *\n   * @returns {Void} None.\n   */\n  const executeAction = () => {\n    const { positionId, action } = actionData;\n    flagPositionUpdating(positionId);\n\n    if (action === \"cancel\") {\n      tradeApi\n        .positionClose({\n          positionId: positionId,\n          internalExchangeId: selectedExchange.internalId,\n        })\n        .then(() => {\n          dispatch(showSuccessAlert(\"\", \"dashboard.positions.action.cancel\"));\n        })\n        .catch((e) => {\n          dispatch(showErrorAlert(e));\n        });\n    }\n\n    if (action === \"abort\") {\n      tradeApi\n        .positionCancel({\n          positionId: positionId,\n        })\n        .then(() => {\n          dispatch(showSuccessAlert(\"\", \"dashboard.positions.action.abort\"));\n        })\n        .catch((e) => {\n          dispatch(showErrorAlert(e));\n        });\n    }\n\n    if (action === \"exit\") {\n      tradeApi\n        .positionExit({\n          positionId: positionId,\n          internalExchangeId: selectedExchange.internalId,\n        })\n        .then(() => {\n          dispatch(showSuccessAlert(\"\", \"dashboard.positions.action.exit\"));\n        })\n        .catch((e) => {\n          dispatch(showErrorAlert(e));\n        });\n    }\n  };\n\n  /**\n   * @param {string} positionId .\n   * @returns {void}\n   */\n  const openMarginModal = (positionId) => {\n    setMarginPosition(positionId);\n  };\n\n  const {\n    composeClosePositionsDataTable,\n    composeLogPositionsDataTable,\n    composeOpenPositionsDataTable,\n    composeOpenPositionsForProvider,\n    composeClosedPositionsForProvider,\n    excludeDataTableColumn,\n  } = usePositionDataTableCompose(positionsFiltered, confirmAction, openMarginModal);\n\n  /**\n   *\n   * @param {UserPositionsCollection} allPositions positions collection.\n   * @returns {Number} count of positions in last 24 hour.\n   */\n  const pastDayPositionsCount = (allPositions) => {\n    const last24HoursTime = new Date().getTime() - 60 * 60 * 24 * 1000;\n    const filtered = allPositions.filter((item) => item.closeDate >= last24HoursTime);\n    return filtered.length;\n  };\n\n  /**\n   *\n   * @param {string} countType Which type of count to configure\n   * @param {number} count Count value.\n   * @returns {void} None.\n   */\n  const configureCounts = (countType, count) => {\n    if (setOpenCount && setCloseCount && setLogCount) {\n      switch (countType) {\n        case \"open\":\n          setOpenCount(count);\n          break;\n        case \"close\":\n          setCloseCount(count);\n          break;\n        case \"log\":\n          setLogCount(count);\n          break;\n        default:\n          setOpenCount(count);\n          break;\n      }\n    }\n  };\n\n  /**\n   * Compose MUI data table for positions collection of selected type.\n   *\n   * @returns {DataTableContent} Data table content.\n   */\n  const composeDataTableForPositionsType = () => {\n    let dataTable;\n    const isFutures = selectedExchange.exchangeType.toLowerCase() === \"futures\";\n    const isZignaly = selectedExchange.exchangeName.toLowerCase() === \"zignaly\";\n    const isBitmex = selectedExchange.exchangeName.toLowerCase() === \"bitmex\";\n    const isDemo = selectedExchange.paperTrading;\n    const isTestnet = selectedExchange.isTestnet;\n\n    if (type === \"closed\") {\n      dataTable = composeClosePositionsDataTable();\n      configureCounts(\"close\", pastDayPositionsCount(positionsAll));\n    } else if (type === \"log\") {\n      dataTable = composeLogPositionsDataTable();\n      configureCounts(\"log\", positionsAll.length);\n    } else if (type === \"open\") {\n      dataTable = composeOpenPositionsDataTable();\n      if (isDemo || isTestnet || !isFutures) {\n        dataTable = excludeDataTableColumn(dataTable, \"col.price.market\");\n        dataTable = excludeDataTableColumn(dataTable, \"col.price.liquid\");\n      }\n      if (!isBitmex) {\n        dataTable = excludeDataTableColumn(dataTable, \"col.margin\");\n      }\n      configureCounts(\"open\", positionsAll.length);\n    } else if (type === \"profileOpen\") {\n      dataTable = composeOpenPositionsForProvider(positionsAll, confirmAction);\n      dataTable = excludeDataTableColumn(dataTable, \"col.actions\");\n      if (isZignaly && isFutures) {\n        dataTable = excludeDataTableColumn(dataTable, \"col.cancel\");\n      }\n      configureCounts(\"open\", positionsAll.length);\n    } else if (type === \"profileClosed\") {\n      dataTable = composeClosedPositionsForProvider(positionsAll);\n      configureCounts(\"close\", pastDayPositionsCount(positionsAll));\n    } else {\n      throw new Error(formatMessage({ id: \"dashboard.positions.type.invalid\" }));\n    }\n\n    if (positionEntity) {\n      const isProviderOwner = userData.userId === positionEntity.providerOwnerUserId;\n      if ([\"closed\", \"log\"].includes(type)) {\n        // Exclude actions display for closed / log positions in view page.\n        dataTable = excludeDataTableColumn(dataTable, \"col.actions\");\n      } else if (type === \"open\" && positionEntity.isCopyTrading && !isProviderOwner) {\n        // Exclude actions on copy trading open position, except for the owner.\n        dataTable = excludeDataTableColumn(dataTable, \"col.actions\");\n      }\n    }\n\n    return dataTable;\n  };\n\n  const { columns, data } = composeDataTableForPositionsType();\n\n  const generatePositionsReport = () => {\n    tradeApi\n      .generateExchangePositionsReport({ internalExchangeId: selectedExchange.internalId })\n      .then(() => {\n        setProcessingReports(true);\n        setReportModal(false);\n        dispatch(showSuccessAlert(\"\", \"alert.positionreport.message\"));\n      })\n      .catch((e) => {\n        dispatch(showErrorAlert(e));\n      })\n      .finally(() => {\n        setProcessingReports(false);\n      });\n    return false;\n  };\n\n  const showReportModal = () => {\n    setReportModal(true);\n    return false;\n  };\n\n  /**\n   * @type {MUIDataTableOptions}\n   */\n  const options = {\n    sortOrder: { name: \"openDateReadable\", direction: \"desc\" },\n    // @ts-ignore\n    download: processingReports ? \"disabled\" : true,\n    // @ts-ignore\n    onDownload: type === \"closed\" ? showReportModal : null,\n  };\n\n  const embedFilters = () => {\n    // Don't display filters on single position display.\n    if (positionEntity) {\n      return null;\n    }\n\n    if (isProfile) {\n      return null;\n    }\n\n    if (!filtersVisibility) {\n      return null;\n    }\n\n    return (\n      <PositionFilters\n        clearFilters={clearFilters}\n        filters={filters}\n        onChange={setFilters}\n        pairOptions={pairOptions}\n        providerOptions={providerOptions}\n        showTypesFilter={showTypesFilter}\n        sides={sides}\n        types={types}\n      />\n    );\n  };\n\n  const tableClass = positionEntity ? \"positionTable\" : \"positionsTable\";\n\n  return (\n    <>\n      <ConfirmDialog\n        confirmConfig={confirmConfig}\n        executeActionCallback={executeAction}\n        setConfirmConfig={setConfirmConfig}\n      />\n      <Modal\n        onClose={() => setMarginPosition(null)}\n        persist={false}\n        size=\"mini\"\n        state={Boolean(marginPosition)}\n      >\n        {marginPosition && (\n          <MarginModal onClose={() => setMarginPosition(false)} position={marginPosition} />\n        )}\n      </Modal>\n\n      <Modal onClose={() => setReportModal(false)} persist={false} size=\"small\" state={reportModal}>\n        <PositionsReportModal\n          onClose={() => setReportModal(false)}\n          onSuccess={generatePositionsReport}\n        />\n      </Modal>\n\n      {loading && (\n        <Box\n          alignItems=\"center\"\n          className=\"loadingBox\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n        >\n          <CircularProgress color=\"primary\" size={40} />\n        </Box>\n      )}\n      {!loading && (\n        <>\n          {isEmpty(positionsAll) ? (\n            <NoPositions isProfile={isProfile} type={type} />\n          ) : (\n            <Box className={tableClass} display=\"flex\" flexDirection=\"column\" width={1}>\n              <Table\n                columns={columns}\n                data={data}\n                modifiedFiltersCount={modifiedFilters}\n                options={options}\n                persistKey={tablePersistsKey}\n                title={embedFilters()}\n                toggleFilters={toggleFilters}\n              />\n            </Box>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PositionsTable;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["React","props","filters","onChange","showTypesFilter","providerOptions","pairOptions","types","sides","CustomFilters","title","CustomSelect","label","value","type","options","providerId","v","pair","val","search","side","Box","alignItems","className","display","flexDirection","Checkbox","checked","status","inputProps","e","target","currentTarget","id","isProfile","justifyContent","Typography","variant","emptyMessage","CustomButton","onClick","navigate","positionEntity","notifyPositionsUpdate","persistKey","coinsDistinct","providersDistinct","typeRef","useRef","storeSettings","useStoreSettingsSelector","selectedExchange","useSelectedExchange","storeViews","useStoreViewsSelector","exchangeRef","exchangeId","dispatch","useDispatch","useState","loading","setLoading","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","noSsr","updatingIndex","setUpdatingIndex","defaultPositionsState","open","closed","log","profileOpen","profileClosed","positions","setPositions","positionsAll","filtersVisibility","setFiltersVisibility","map","position","concat","providerName","storeFilters","optionsFilters","res","useFilters","setFilters","clearFilters","modifiedFilters","statusRef","prepareNewPositionsState","initiatorExchangeInternalId","newPositions","current","internalId","fallbackLogPositionsAllStatuses","requestData","payload","internalExchangeId","tradeApi","extendedStatuses","showErrorAlert","loadPositionsForExchange","cancel","fetchMethod","provider","Promise","resolve","routeFetchMethod","isOriginalInitiator","then","fetchData","mutateUpdatingPositions","catch","code","finally","useEffect","loadPositionForExchange","positionId","data","includes","useInterval","filterPositions","filterValues","currentPositionsCollection","updating","positionsFiltered","flagPositionUpdating","newUpdatingIndex","onClose","mode","setMode","intl","useIntl","useForm","register","handleSubmit","errors","useBalance","balance","balanceLoading","maxRemoveableMargin","margin","positionSizeQuote","unrealizedProfitLosses","profit","onSubmit","amount","parseFloat","tradeApiClient","showSuccessAlert","formatMessage","Tabs","classes","flexContainer","event","newValue","Tab","selected","CircularProgress","color","size","OutlinedInput","endAdornment","InputAdornment","error","Boolean","min","step","inputRef","validate","isNaN","totalAvailableBTC","name","placeholder","formatNumber","disabled","onSuccess","minWidth","useContext","PositionsContext","setOpenCount","setCloseCount","setLogCount","userData","useStoreUserData","usePositionsList","isAdmin","marginPosition","setMarginPosition","processingReports","setProcessingReports","reportModal","setReportModal","tablePersistsKey","titleTranslationId","messageTranslationId","visible","confirmConfig","setConfirmConfig","action","actionData","setActionData","confirmAction","targetElement","getAttribute","usePositionDataTableCompose","composeClosePositionsDataTable","composeLogPositionsDataTable","composeOpenPositionsDataTable","composeOpenPositionsForProvider","composeClosedPositionsForProvider","excludeDataTableColumn","pastDayPositionsCount","allPositions","last24HoursTime","Date","getTime","filter","item","closeDate","length","configureCounts","countType","count","dataTable","isFutures","exchangeType","toLowerCase","isZignaly","exchangeName","isBitmex","isDemo","paperTrading","isTestnet","Error","isProviderOwner","userId","providerOwnerUserId","isCopyTrading","composeDataTableForPositionsType","columns","sortOrder","direction","download","onDownload","tableClass","executeActionCallback","Modal","persist","state","width","Table","modifiedFiltersCount","toggleFilters","module","exports","array","comparator","index","baseEach","collection","predicate","result","push","arrayPush","isFlattenable","baseFlatten","depth","isStrict","isArrayLike","iteratee","Array","key","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","iteratees","orders","object","other","baseSet","castPath","paths","path","assignValue","isIndex","isObject","toKey","customizer","lastIndex","nested","objValue","undefined","comparer","sort","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","isCommon","seen","set","outer","computed","seenIndex","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","Set","noop","values","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","arrayFilter","baseFilter","TypeError","args","arguments","call","this","apply","negate","pickBy","basePickBy","getAllKeysIn","prop","baseOrderBy","baseRest","isIterateeCall","sortBy","baseUniq"],"sourceRoot":""}