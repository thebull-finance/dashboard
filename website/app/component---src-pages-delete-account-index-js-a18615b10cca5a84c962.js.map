{"version":3,"file":"component---src-pages-delete-account-index-js-a18615b10cca5a84c962.js","mappings":"4NA2CA,EA9BkB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAYC,EAAW,EAAjBC,KACzB,GAA8BC,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KAEA,OACE,gBAACC,EAAA,EAAD,CACEC,WAAW,SACXC,UAAU,YACVC,QAAQ,OACRC,cAAc,SACdC,eAAe,UAEbP,EAMA,gBAACE,EAAA,EAAD,CAAKC,WAAW,SAASC,UAAU,WAAWC,QAAQ,OAAOC,cAAc,UACzE,gBAACE,EAAA,EAAD,CAAYC,QAAQ,MAClB,gBAAC,IAAD,CAAkBC,GAAG,mBAEvB,gBAAC,IAAD,CAAMN,UAAU,YAAYO,GAAG,UAC7B,gBAAC,IAAD,CAAkBD,GAAG,uBAVzB,gCACE,uBAAKE,IAAI,UAAUR,UAAU,OAAOS,IAAKC,EAAAA,IACzC,gBAACjB,EAAD,CAAMD,KAAMA,EAAMK,WAAYA,Q,qNCoExC,EAxEiC,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,KAAMK,EAAiB,EAAjBA,WACxC,GAA8BF,EAAAA,EAAAA,WAAS,GAAhCgB,EAAP,KAAgBC,EAAhB,KACA,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAsCb,OACE,wBAAMC,OAAO,OAAOC,SAAUP,GA1Bf,SAACQ,GAChB,IAAQC,EAAWD,EAAXC,OACRX,GAAW,GACX,IAAMY,EAAU,CACdC,MAAOjC,EACP+B,OAAAA,GAEFG,EAAAA,EAAAA,qBACwBF,GACrBG,MAAK,WACJX,GAASY,EAAAA,EAAAA,IAAiB,GAAI,2BAC9BC,EAAAA,EAAAA,UAAS,aAEVC,OAAM,SAACC,GACS,KAAXA,EAAEvC,KACJK,GAAW,GAEXmB,GAASgB,EAAAA,EAAAA,IAAeD,OAG3BE,SAAQ,WACPrB,GAAW,UAMb,gBAACd,EAAA,EAAD,CACEC,WAAW,SACXC,UAAU,2BACVC,QAAQ,OACRC,cAAc,SACdC,eAAe,UAEf,gBAACC,EAAA,EAAD,CAAYC,QAAQ,MAClB,gBAAC,IAAD,CAAkBC,GAAG,yBAEvB,gBAACF,EAAA,EAAD,KACE,gBAAC,IAAD,CAAkBE,GAAG,2BAEvB,gBAAC4B,EAAA,EAAD,CACElC,UAAU,cACVmC,WAAW,EACXC,SAAUrB,EACVsB,KAAK,SACLC,YAAapB,EAAKqB,cAAc,CAAEjC,GAAI,2BAExC,gBAACkC,EAAA,EAAD,CAAcxC,UAAU,eAAeW,QAASA,EAAS8B,KAAK,UAC5D,gBAAC,IAAD,CAAkBnC,GAAG,4B,sBCtD/B,EAjBsB,SAAC,GAAc,IAAZd,EAAW,EAAXA,KACjB0B,GAAOC,EAAAA,EAAAA,KAEb,OACE,gCACE,gBAACuB,EAAA,EAAD,KACE,6BACMxB,EAAKqB,cAAc,CAAEjC,GAAI,wBAD/B,MAC6DY,EAAKqB,cAAc,CAC5EjC,GAAI,cAIV,gBAACqC,EAAA,EAAD,CAAWnD,KAAMA,EAAME,KAAMkD","sources":["webpack://zignaly-webapp/./src/components/Forms/ResetForm/ResetForm.js","webpack://zignaly-webapp/./src/components/Forms/ConfirmDeleteAccountForm/ConfirmDeleteAccountForm.js","webpack://zignaly-webapp/./src/pages/deleteAccount/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ResetForm.scss\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport Logo from \"images/logo/logoNW.svg\";\nimport { FormattedMessage } from \"react-intl\";\nimport Link from \"components/LocalizedLink\";\n\n/**\n * @param {Object} props Props.\n * @param {string} props.code Reset Code.\n * @param {function} props.form Form component to embed.\n * @returns {JSX.Element} JSx component.\n */\nconst ResetForm = ({ code, form: Form }) => {\n  const [expired, setExpired] = useState(false);\n\n  return (\n    <Box\n      alignItems=\"center\"\n      className=\"resetForm\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n    >\n      {!expired ? (\n        <>\n          <img alt=\"TheBull\" className=\"logo\" src={Logo} />\n          <Form code={code} setExpired={setExpired} />\n        </>\n      ) : (\n        <Box alignItems=\"center\" className=\"errorBox\" display=\"flex\" flexDirection=\"column\">\n          <Typography variant=\"h3\">\n            <FormattedMessage id=\"recover.error\" />\n          </Typography>\n          <Link className=\"loginLink\" to=\"/login\">\n            <FormattedMessage id=\"backtologin.text\" />\n          </Link>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ResetForm;\n","import React, { useState } from \"react\";\nimport \"./ConfirmDeleteAccountForm.scss\";\nimport { Box, OutlinedInput, Typography } from \"@material-ui/core\";\nimport CustomButton from \"../../CustomButton/CustomButton\";\nimport { useForm } from \"react-hook-form\";\nimport tradeApi from \"../../../services/tradeApiClient\";\nimport { useDispatch } from \"react-redux\";\nimport { showSuccessAlert, showErrorAlert } from \"../../../store/actions/ui\";\nimport { navigate } from \"gatsby\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\n/**\n * @typedef {Object} PositionPageProps\n * @property {string} code code aquired by the recover request.\n * @property {React.SetStateAction<*>} setExpired\n */\n\n/**\n * Reset 2FA form component.\n *\n * @param {PositionPageProps} props Component properties.\n * @returns {JSX.Element} Reset Password element.\n */\nconst ConfirmDeleteAccountForm = ({ code, setExpired }) => {\n  const [loading, setLoading] = useState(false);\n  const { handleSubmit, register } = useForm();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  /**\n   * @typedef {Object} DataObject\n   * @property {String} reason\n   */\n\n  /**\n   * Data returned at form submition.\n   *\n   * @param {DataObject} data form data received by the submit method.\n   * @returns {void}\n   */\n  const onSubmit = (data) => {\n    const { reason } = data;\n    setLoading(true);\n    const payload = {\n      token: code,\n      reason,\n    };\n    tradeApi\n      .deleteAccountConfirm(payload)\n      .then(() => {\n        dispatch(showSuccessAlert(\"\", \"deleteaccount.success\"));\n        navigate(\"/login\");\n      })\n      .catch((e) => {\n        if (e.code === 48) {\n          setExpired(false);\n        } else {\n          dispatch(showErrorAlert(e));\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\n      <Box\n        alignItems=\"center\"\n        className=\"confirmDeleteAccountForm\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"h3\">\n          <FormattedMessage id=\"deleteaccount.title\" />\n        </Typography>\n        <Typography>\n          <FormattedMessage id=\"deleteaccount.confirm\" />\n        </Typography>\n        <OutlinedInput\n          className=\"customInput\"\n          fullWidth={true}\n          inputRef={register}\n          name=\"reason\"\n          placeholder={intl.formatMessage({ id: \"deleteaccount.reason\" })}\n        />\n        <CustomButton className=\"submitButton\" loading={loading} type=\"submit\">\n          <FormattedMessage id=\"deleteaccount.title\" />\n        </CustomButton>\n      </Box>\n    </form>\n  );\n};\n\nexport default ConfirmDeleteAccountForm;\n","import React from \"react\";\nimport ConfirmDeleteAccountForm from \"../../components/Forms/ConfirmDeleteAccountForm\";\nimport { Helmet } from \"react-helmet\";\nimport ResetForm from \"components/Forms/ResetForm\";\nimport { useIntl } from \"react-intl\";\n\n/**\n * @typedef {Object} PositionPageProps\n * @property {string} code Code required by the delete request.\n */\n\n/**\n * Delete account page component.\n *\n * @param {PositionPageProps} props Component properties.\n * @returns {JSX.Element} JSX\n */\nconst DeleteAccount = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`${intl.formatMessage({ id: \"deleteaccount.title\" })} | ${intl.formatMessage({\n            id: \"product\",\n          })}`}\n        </title>\n      </Helmet>\n      <ResetForm code={code} form={ConfirmDeleteAccountForm} />\n    </>\n  );\n};\n\nexport default DeleteAccount;\n"],"names":["code","Form","form","useState","expired","setExpired","Box","alignItems","className","display","flexDirection","justifyContent","Typography","variant","id","to","alt","src","Logo","loading","setLoading","useForm","handleSubmit","register","dispatch","useDispatch","intl","useIntl","method","onSubmit","data","reason","payload","token","tradeApi","then","showSuccessAlert","navigate","catch","e","showErrorAlert","finally","OutlinedInput","fullWidth","inputRef","name","placeholder","formatMessage","CustomButton","type","Helmet","ResetForm","ConfirmDeleteAccountForm"],"sourceRoot":""}