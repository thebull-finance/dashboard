{"version":3,"file":"ff84f155b763804cb72dadfdedfc4188ecee52d3-cada263fe57389aa0563.js","mappings":"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","sources":["webpack://zignaly-webapp/./node_modules/dayjs/plugin/isSameOrBefore.js","webpack://zignaly-webapp/./node_modules/dayjs/plugin/weekOfYear.js","webpack://zignaly-webapp/./src/components/Graphs/BarChart/BarChart.js","webpack://zignaly-webapp/./src/components/Graphs/Chart.roundedBarCharts.js","webpack://zignaly-webapp/./src/components/Provider/Analytics/TradingPerformance/TradingPerformanceGraph/TradingPerformanceGraph.js","webpack://zignaly-webapp/./src/components/Provider/Analytics/TradingPerformance/WeeklyData/WeeklyData.js","webpack://zignaly-webapp/./src/components/Provider/Analytics/TradingPerformance/TradingPerformance.js"],"sourcesContent":["require(\"core-js/modules/esnext.global-this.js\");\n\n!function (e, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(i) : (e = \"undefined\" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isSameOrBefore = i();\n}(this, function () {\n  \"use strict\";\n\n  return function (e, i) {\n    i.prototype.isSameOrBefore = function (e, i) {\n      return this.isSame(e, i) || this.isBefore(e, i);\n    };\n  };\n});","require(\"core-js/modules/esnext.global-this.js\");\n\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = \"undefined\" != typeof globalThis ? globalThis : e || self).dayjs_plugin_weekOfYear = t();\n}(this, function () {\n  \"use strict\";\n\n  var e = \"week\",\n      t = \"year\";\n  return function (i, n, r) {\n    var f = n.prototype;\n    f.week = function (i) {\n      if (void 0 === i && (i = null), null !== i) return this.add(7 * (i - this.week()), \"day\");\n      var n = this.$locale().yearStart || 1;\n\n      if (11 === this.month() && this.date() > 25) {\n        var f = r(this).startOf(t).add(1, t).date(n),\n            s = r(this).endOf(e);\n        if (f.isBefore(s)) return 1;\n      }\n\n      var a = r(this).startOf(t).date(n).startOf(e).subtract(1, \"millisecond\"),\n          o = this.diff(a, e, !0);\n      return o < 0 ? r(this).startOf(\"week\").week() : Math.ceil(o);\n    }, f.weeks = function (e) {\n      return void 0 === e && (e = null), this.week(e);\n    };\n  };\n});","import React, { useCallback } from \"react\";\nimport \"./BarChart.scss\";\nimport { Box } from \"@material-ui/core\";\nimport { Bar, HorizontalBar } from \"react-chartjs-2\";\nimport \"../Chart.roundedBarCharts\";\nimport LogoIcon from \"../../../images/logo/logoIcon.svg\";\nimport useChartTooltip from \"../../../hooks/useChartTooltip\";\nimport TooltipChart from \"../TooltipChart\";\nimport { isEqual } from \"lodash\";\n\n// Chart.Tooltip.positioners.cursor = function (chartElements, coordinates) {\n//   return { x: coordinates.x, y: 210 };\n// };\n\n/**\n * Check that props are equals (deep comparison)\n * @param {*} prevProps prevProps\n * @param {*} nextProps nextProps\n * @returns {boolean} Equality\n */\nconst propsEqual = (prevProps, nextProps) =>\n  isEqual(prevProps.data, nextProps.data) && isEqual(prevProps.options, nextProps.options);\n\n// Memoize the chart and only re-renders when the data is updated.\n// Otherwise it will be rendered everytime the toolip is triggered(state update).\nconst MemoizedBar = React.memo(Bar, propsEqual);\nconst MemoizedHorizontalBar = React.memo(HorizontalBar, propsEqual);\n\n/**\n * @typedef {import('chart.js').ChartData} ChartData\n * @typedef {import('chart.js').ChartOptions} ChartOptions\n * @typedef {import('chart.js').ChartPluginsOptions} ChartPluginsOptions\n * @typedef {import('chart.js').ChartTooltipItem} ChartTooltipItem\n * @typedef {import('chart.js').Chart} Chart\n */\n\n/**\n * @callback ChartTooltipCallback\n * @param {ChartTooltipItem} tooltipItem:\n * @param {ChartData} data\n */\n\n/**\n * @typedef {Object} BarChartPropTypes\n * @property {Array<Number>} values Chart values.\n * @property {Array<String>} [labels] Chart labels.\n * @property {Array<String>} [imageUrls] Chart images (used instead of labels).\n * @property {boolean} [horizontal] Flag to display the bars horizontally.\n * @property {boolean} [adjustHeightToContent] Adjust thw height of the canvas dynamicaly to fit its content. (Horizontal only)\n * @property {ChartTooltipCallback} tooltipFormat Function to format data based on selected value.\n * @property {ChartOptions} options Custom user options to override.\n */\n\n/**\n * Provides a wrapper to display a bar chart.\n *\n * @param {BarChartPropTypes} props Component properties.\n * @returns {JSX.Element} Component JSX.\n */\nconst BarChart = (props) => {\n  const {\n    values,\n    labels,\n    horizontal,\n    tooltipFormat,\n    imageUrls,\n    adjustHeightToContent,\n    options: customOptions,\n  } = props;\n  const { chartRef, pointHoverRef, tooltipData, showTooltip } = useChartTooltip(tooltipFormat);\n  const showTooltipCallback = useCallback(showTooltip, [values]);\n\n  /**\n   * @type ChartData\n   */\n  const data = {\n    labels: imageUrls ? values.map(() => \"\") : labels,\n    datasets: [\n      {\n        data: values,\n        barThickness: 20,\n        maxBarThickness: 24,\n        // barPercentage: 0.5,\n        // backgroundColor: colorsOptions.backgroundColor,\n        backgroundColor: values.map((v) => (v < 0 ? \"#f63f82\" : \"#08a441\")),\n      },\n    ],\n  };\n\n  const yAxes = {\n    ticks: {\n      fontColor: \"#d4d4d4\",\n      fontSize: 14,\n      // padding: 75,\n      padding: 0,\n      // stepSize: 1,\n      //   min: -2,\n    },\n    gridLines: {\n      // draw zero line only\n      color: \"transparent\",\n      display: true,\n      drawBorder: false,\n      zeroLineColor: \"#d4d4d4\",\n    },\n  };\n\n  const xAxes = {\n    gridLines: {\n      display: false,\n    },\n    ticks: {\n      display: true,\n      padding: horizontal ? 10 : 0,\n    },\n    // categoryPercentage: 1,\n    // barPercentage: 0.7,\n  };\n\n  // Load all images\n  const [imagesElements, setImages] = React.useState([]);\n  React.useEffect(() => {\n    if (imageUrls) {\n      const images = imageUrls.map((imageUrl) => {\n        let image = new Image();\n        image.src = imageUrl;\n        return image;\n      });\n      setImages(images);\n    }\n  }, [imageUrls]);\n\n  /**\n   * @typedef {Object} RoundedChartOptions\n   * @property {number} cornerRadius:\n   *\n   * @typedef {ChartOptions & RoundedChartOptions} ExtendedChartOptions\n   */\n  /**\n   * @type ExtendedChartOptions\n   */\n  let options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [horizontal ? xAxes : yAxes],\n      xAxes: [horizontal ? yAxes : xAxes],\n    },\n    layout: {\n      padding: {\n        // left: 25,\n        left: horizontal ? 15 : 0,\n        right: 0,\n        top: 20,\n        bottom: horizontal ? 10 : imageUrls ? 25 : 0,\n      },\n    },\n    cornerRadius: 4,\n    tooltips: {\n      enabled: false,\n      custom: showTooltipCallback,\n    },\n    animation: {\n      duration: 0,\n    },\n    hover: {\n      intersect: false,\n      mode: \"index\",\n      animationDuration: 0,\n    },\n    plugins: {\n      legendImages: imagesElements\n        ? {\n            images: imagesElements,\n            horizontal,\n          }\n        : false,\n    },\n    // events: [\"click\", \"touchstart\", \"touchmove\"],\n  };\n\n  const plugins = [\n    {\n      id: \"legendImages\",\n      /**\n       * @typedef {Object} ChartWithScales\n       * @property {*} scales\n       *\n       * @typedef {Chart & ChartWithScales} ExtendedChart\n       */\n      /**\n       * Draw images at the bottom of the graph\n       * @param {ExtendedChart} chart Chart instance.\n       * @returns {void}\n       */\n      afterDraw: (chart) => {\n        if (!chart.data.datasets) return;\n        const { images, horizontal: isHorizontal } = chart.options.plugins.legendImages;\n        let ctx = chart.ctx;\n        let xAxis = chart.scales[\"x-axis-0\"];\n        let yAxis = chart.scales[\"y-axis-0\"];\n\n        /**\n         * @param {HTMLImageElement} image The image to draw.\n         * @param {number} index Data infex.\n         * @returns {void}\n         */\n        const drawImage = (image, index) => {\n          if (!image.naturalWidth) {\n            // Image didn't load properly, fallback to default icon\n            image.src = LogoIcon;\n          }\n\n          if (isHorizontal) {\n            // Draw image on the left\n            const y = yAxis.getPixelForTick(index);\n            const size = 26;\n            ctx.drawImage(image, 0, y - size / 2, size, size);\n          } else {\n            // Draw image at the bottom\n            const x = xAxis.getPixelForTick(index);\n            const size = 40;\n            ctx.drawImage(image, x - size / 2, yAxis.bottom + 15, size, size);\n          }\n        };\n\n        for (let i = 0; i < images.length; i++) {\n          const image = images[i];\n          if (!image.complete) {\n            image.onload = () => {\n              drawImage(image, i);\n            };\n          } else {\n            drawImage(image, i);\n          }\n        }\n      },\n    },\n  ];\n\n  // Merge user options\n  options = Object.assign(options, customOptions);\n\n  const BarComponent = horizontal ? MemoizedHorizontalBar : MemoizedBar;\n\n  let height = 0;\n  if (horizontal && adjustHeightToContent) {\n    // Calculate optimal height to display all the bars.\n    const BAR_GAP = 3;\n    const X_AXIS_HEIGHT = 60;\n    let barThickness = data.datasets[0].barThickness;\n    barThickness = typeof barThickness === \"number\" ? barThickness : 0;\n    height = values.length * (barThickness + BAR_GAP * 2) + X_AXIS_HEIGHT;\n  }\n\n  return (\n    <Box className=\"barChart\" style={{ ...(height && { height }) }}>\n      <TooltipChart pointHoverRef={pointHoverRef} showPointHover={false} tooltipData={tooltipData}>\n        <BarComponent data={data} options={options} plugins={plugins} ref={chartRef} />\n      </TooltipChart>\n    </Box>\n  );\n};\n\nexport default BarChart;\n","// @ts-nocheck\n/* eslint-disable */\n\n/*\n *   Rounded Rectangle Extension for Bar Charts and Horizontal Bar Charts\n *   Tested with Charts.js 2.7.0\n */\nChart.elements.Rectangle.prototype.draw = function () {\n  let ctx = this._chart.ctx;\n  let vm = this._view;\n  let borderSkipped;\n  let bottom;\n  let left;\n  var radius;\n  let right;\n  let signX;\n  let signY;\n  let top;\n  let borderWidth = vm.borderWidth;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let cornerRadius = this._chart.config.options.cornerRadius;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n  if (typeof cornerRadius === \"undefined\") {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    let barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    let halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    let borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    let borderRight = right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    let borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    let borderBottom = bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  let corners = [\n    [left, bottom],\n    [left, top],\n    [right, top],\n    [right, bottom],\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  let borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    nextCornerId = i + 1;\n    if (nextCornerId == 4) {\n      nextCornerId = 0;\n    }\n\n    nextCorner = cornerAt(nextCornerId);\n\n    width = corners[2][0] - corners[1][0];\n    height = corners[0][1] - corners[1][1];\n    x = corners[1][0];\n    y = corners[1][1];\n\n    var radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      x_tl = x;\n      x_tr = x + width;\n      y_tl = y + height;\n      y_tr = y + height;\n\n      x_bl = x;\n      x_br = x + width;\n      y_bl = y;\n      y_br = y;\n\n      // Draw\n      ctx.moveTo(x_bl + radius, y_bl);\n      ctx.lineTo(x_br - radius, y_br);\n      ctx.quadraticCurveTo(x_br, y_br, x_br, y_br - radius);\n      ctx.lineTo(x_tr, y_tr + radius);\n      ctx.quadraticCurveTo(x_tr, y_tr, x_tr - radius, y_tr);\n      ctx.lineTo(x_tl + radius, y_tl);\n      ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl + radius);\n      ctx.lineTo(x_bl, y_bl - radius);\n      ctx.quadraticCurveTo(x_bl, y_bl, x_bl + radius, y_bl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      x_tl = x + width;\n      x_tr = x;\n      y_tl = y;\n      y_tr = y;\n\n      x_bl = x + width;\n      x_br = x;\n      y_bl = y + height;\n      y_br = y + height;\n\n      // Draw\n      ctx.moveTo(x_bl + radius, y_bl);\n      ctx.lineTo(x_br - radius, y_br);\n      ctx.quadraticCurveTo(x_br, y_br, x_br, y_br - radius);\n      ctx.lineTo(x_tr, y_tr + radius);\n      ctx.quadraticCurveTo(x_tr, y_tr, x_tr - radius, y_tr);\n      ctx.lineTo(x_tl + radius, y_tl);\n      ctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl + radius);\n      ctx.lineTo(x_bl, y_bl - radius);\n      ctx.quadraticCurveTo(x_bl, y_bl, x_bl + radius, y_bl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n","import React from \"react\";\nimport \"./TradingPerformanceGraph.scss\";\nimport BarChart from \"../../../../Graphs/BarChart\";\nimport { formatPrice } from \"../../../../../utils/formatters\";\nimport { Box, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n/**\n *\n * @typedef {import(\"../../../../../services/tradeApiClient.types\").DefaultProviderPerformanceWeeklyStats} DefaultProviderPerformanceWeeklyStats\n * @typedef {import('chart.js').ChartTooltipItem} ChartTooltipItem\n */\n\n/**\n *\n * @typedef {Object} DefaultQuarter\n * @property {Array<DefaultProviderPerformanceWeeklyStats>} weeklyStats\n * @property {Number} total\n * @property {Number} id\n */\n\n/**\n *\n * @typedef {Object} DefaultProps\n * @property {DefaultQuarter} quarter\n * @property {string} [unit]\n */\n\n/**\n * Trading performance chart component.\n *\n * @param {DefaultProps} props Default props.\n * @return {JSX.Element} JSX component.\n */\nconst PerformanceGraph = ({ quarter, unit = \"%\" }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const values =\n    quarter && quarter.weeklyStats ? quarter.weeklyStats.map((item) => item.return) : [];\n  const labels = quarter && quarter.weeklyStats ? quarter.weeklyStats.map(() => \"\") : [];\n  const options = {\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: false,\n          ticks: {\n            display: true,\n          },\n          gridLines: {\n            color: \"transparent\",\n            display: true,\n            drawBorder: false,\n            zeroLineColor: \"#d4d4d4\",\n          },\n        },\n      ],\n    },\n  };\n\n  /**\n   * @param {ChartTooltipItem} tooltipItems Tooltip item.\n   * @returns {string} Tooltip text.\n   */\n  const tooltipFormat = (tooltipItems /* data */) =>\n    `${formatPrice(tooltipItems[isMobile ? \"xLabel\" : \"yLabel\"])}${unit}`;\n\n  return (\n    <Box className=\"tradingPerformanceGraph\">\n      <BarChart\n        adjustHeightToContent={isMobile}\n        horizontal={isMobile}\n        labels={labels}\n        options={options}\n        tooltipFormat={tooltipFormat}\n        values={values}\n      />\n    </Box>\n  );\n};\n\nexport default PerformanceGraph;\n","import React from \"react\";\nimport \"./WeeklyData.scss\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport isSameOrBefore from \"dayjs/plugin/isSameOrBefore\";\ndayjs.extend(isSameOrBefore);\n\n/**\n *\n * @typedef {import(\"../../../../../services/tradeApiClient.types\").DefaultProviderPerformanceWeeklyStats} DefaultProviderPerformanceWeeklyStats\n * @typedef {import('chart.js').ChartTooltipItem} ChartTooltipItem\n */\n\n/**\n *\n * @typedef {Object} DefaultQuarter\n * @property {Array<DefaultProviderPerformanceWeeklyStats>} weeklyStats\n * @property {Number} total\n * @property {Number} id\n * @property {String} label\n */\n\n/**\n *\n * @typedef {Object} DefaultProps\n * @property {Array<DefaultQuarter>} list\n * @property {DefaultQuarter} selected\n * @property {Function} onChange\n * @property {string} [unit]\n */\n\n/**\n * Trading performance chart component.\n *\n * @param {DefaultProps} props Default props.\n * @return {JSX.Element} JSX component.\n */\n\nconst WeeklyData = ({ list, selected, onChange, unit = \"%\" }) => {\n  const decimalPlaces = unit === \"BTC\" ? 8 : 2;\n  /**\n   * Function to select a quarter.\n   *\n   * @param {Number} id id of the quarter on which user clicks.\n   * @returns {void} None.\n   */\n  const handleChange = (id) => {\n    let found = list.find((item) => item.id === id);\n    if (found) {\n      onChange(found);\n    }\n  };\n\n  return (\n    <Box\n      alignItems=\"flex-start\"\n      className=\"weeklyData\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n    >\n      <Box\n        alignItems=\"center\"\n        className=\"weekLabels\"\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n      >\n        <Typography className=\"quaterLabel\" variant=\"h3\" />\n        {selected &&\n          selected.weeklyStats &&\n          selected.weeklyStats.map((item, index) => (\n            <Typography key={index} variant=\"h5\">\n              {dayjs(item.day).isSameOrBefore(dayjs(), \"week\")\n                ? dayjs(item.day).format(\"DD MMM\")\n                : \"--\"}\n            </Typography>\n          ))}\n        <Typography className=\"total\" variant=\"h5\">\n          Total\n        </Typography>\n      </Box>\n\n      <Box className=\"weekData\" display=\"flex\" flexDirection=\"column\">\n        {list.map((item, index) => (\n          <Box\n            alignItems=\"center\"\n            className={\"quarterBox \" + (selected.id === item.id ? \"selected\" : \"\")}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            key={index}\n            onClick={() => handleChange(item.id)}\n          >\n            <Typography className=\"quaterLabel\" variant=\"h3\">\n              {item.label}\n            </Typography>\n            {item.weeklyStats.map((item2, index2) => (\n              <Typography\n                className={`${unit.toLowerCase()} ${item2.return >= 0 ? \"green\" : \"red\"}`}\n                key={index2}\n                variant=\"h5\"\n              >\n                {item2.return ? `${item2.return.toFixed(decimalPlaces)}${unit}` : \"--\"}\n              </Typography>\n            ))}\n            <Typography\n              className={`total ${unit.toLowerCase()} ${item.total >= 0 ? \"green\" : \"red\"}`}\n              variant=\"h5\"\n            >\n              {item.total ? `${item.total.toFixed(decimalPlaces)}${unit}` : \"--\"}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default WeeklyData;\n","import React, { useState, useEffect } from \"react\";\nimport \"./TradingPerformance.scss\";\nimport { Box } from \"@material-ui/core\";\nimport TradingPerformanceGraph from \"./TradingPerformanceGraph\";\nimport WeeklyData from \"./WeeklyData\";\nimport { generateStats } from \"../../../../utils/stats\";\nimport dayjs from \"dayjs\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\ndayjs.extend(weekOfYear);\n\n/**\n *\n * @typedef {import(\"../../../../services/tradeApiClient.types\").ProviderPerformanceEntity} ProviderPerformanceEntity\n * @typedef {import(\"../../../../services/tradeApiClient.types\").DefaultProviderPerformanceWeeklyStats} DefaultProviderPerformanceWeeklyStats\n * @typedef {import(\"./WeeklyData/WeeklyData\").DefaultQuarter} DefaultQuarter\n * @typedef {import(\"../../../../utils/stats\").StatsOptions} StatsOptions\n */\n\n/**\n * @typedef {Object} DefaultProps\n * @property {ProviderPerformanceEntity} performance\n * @property {string} [unit]\n */\n\n/**\n *\n * @param {DefaultProps} props Default props.\n * @returns {JSX.Element} JSX component.\n */\n\nconst TradingPerformance = ({ performance, unit = \"%\" }) => {\n  const [quarters, setQuarters] = useState(/** @type {Array<DefaultQuarter>} */ ([]));\n\n  const [selectedQuarter, setSelectedQuarter] = useState(\n    /** @type {DefaultQuarter} */\n    {\n      weeklyStats: [],\n      total: 0,\n      id: 0,\n      label: \"\",\n    },\n  );\n\n  /**\n   * Get start of the date quarter, starting at the begining of the week.\n   * e.g. Thu Jan 14 -> Sun Jan 3\n   * @param {dayjs.Dayjs} date Date\n   * @return {dayjs.Dayjs} Date\n   */\n  const getQuarterWeekStart = (date) => {\n    let quarterStart = date.startOf(\"quarter\");\n    if (quarterStart.day() > 0) {\n      // Start at the beginning of the week (Fri Jan 1 -> Sun Jan 3)\n      quarterStart = quarterStart.add(1, \"w\").startOf(\"w\");\n    }\n\n    return quarterStart;\n  };\n\n  /**\n   * Update the weekly stats to fill missing weeks and group them by quarters\n   * @returns {void}\n   */\n  const prepareData = () => {\n    if (!performance.weeklyStats.length) return;\n\n    /** @type {Array<DefaultQuarter>} */\n    const _quarters = [];\n\n    const firstStatsDay = dayjs(performance.weeklyStats[0].day);\n    let startDate = getQuarterWeekStart(firstStatsDay);\n\n    // If we have stats for the first week of the quarter we skipped, they will be added\n    // to the previous quarter. (e.g. Sat Apr 3 will be assigned to quarter 1, not 2)\n    if (firstStatsDay.isBefore(startDate)) {\n      startDate = startDate.subtract(1, \"quarter\");\n    }\n\n    /** @type {StatsOptions} */\n    const options = {\n      unit: \"w\",\n      startDate,\n      endDate: dayjs().endOf(\"quarter\").startOf(\"d\"),\n      dateKey: \"day\",\n    };\n\n    generateStats(performance.weeklyStats, options, (weekDate, data) => {\n      const lastQuarter = _quarters && _quarters[_quarters.length - 1];\n      let currentQuarterId = weekDate.quarter();\n\n      const returns = data ? data.return : 0;\n      const weekStats = {\n        day: weekDate.startOf(\"w\").format(),\n        week: weekDate.week().toString(),\n        return: returns,\n        positions: data ? data.positions : 0,\n      };\n\n      if (lastQuarter && lastQuarter.id === currentQuarterId) {\n        // Add weekly stats to current quarter\n        lastQuarter.weeklyStats.push(weekStats);\n        lastQuarter.total += weekStats.return;\n      } else {\n        // Init new quarter\n        _quarters.push({\n          weeklyStats: [weekStats],\n          total: returns,\n          id: currentQuarterId,\n          label: `'${weekDate.year().toString().slice(2)} Q${currentQuarterId}`,\n        });\n      }\n    });\n    setQuarters(_quarters.reverse());\n    setSelectedQuarter(_quarters[0]);\n  };\n  useEffect(prepareData, [performance]);\n\n  /**\n   * Callback to select a quarter.\n   *\n   * @param {*} data Quarter object.\n   * @returns {void}\n   */\n  const handleChange = (data) => {\n    setSelectedQuarter(data);\n  };\n\n  return (\n    <Box className=\"tradingPerformance\">\n      <TradingPerformanceGraph quarter={selectedQuarter} unit={unit} />\n      <WeeklyData list={quarters} onChange={handleChange} selected={selectedQuarter} unit={unit} />\n    </Box>\n  );\n};\n\nexport default TradingPerformance;\n"],"names":["module","exports","e","i","prototype","isSameOrBefore","this","isSame","isBefore","t","n","r","f","week","add","$locale","yearStart","month","date","startOf","s","endOf","a","subtract","o","diff","Math","ceil","weeks","propsEqual","prevProps","nextProps","data","options","MemoizedBar","React","Bar","MemoizedHorizontalBar","HorizontalBar","props","values","labels","horizontal","tooltipFormat","imageUrls","adjustHeightToContent","customOptions","useChartTooltip","chartRef","pointHoverRef","tooltipData","showTooltip","showTooltipCallback","useCallback","map","datasets","barThickness","maxBarThickness","backgroundColor","v","yAxes","ticks","fontColor","fontSize","padding","gridLines","color","display","drawBorder","zeroLineColor","xAxes","imagesElements","setImages","images","imageUrl","image","Image","src","responsive","maintainAspectRatio","legend","scales","layout","left","right","top","bottom","cornerRadius","tooltips","enabled","custom","animation","duration","hover","intersect","mode","animationDuration","plugins","legendImages","id","afterDraw","chart","isHorizontal","ctx","xAxis","yAxis","drawImage","index","naturalWidth","LogoIcon","y","getPixelForTick","size","x","complete","onload","length","Object","assign","BarComponent","height","BAR_GAP","Box","className","style","TooltipChart","showPointHover","ref","Chart","elements","Rectangle","draw","borderSkipped","signX","signY","_chart","vm","_view","borderWidth","config","base","width","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","radius","nextCornerId","nextCorner","floor","x_tl","x_tr","y_tl","y_tr","x_bl","x_br","y_bl","y_br","lineTo","quadraticCurveTo","fill","stroke","quarter","unit","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","weeklyStats","item","return","BarChart","stacked","tooltipItems","formatPrice","dayjs","list","selected","onChange","decimalPlaces","alignItems","flexDirection","justifyContent","Typography","variant","key","day","format","onClick","found","find","label","item2","index2","toLowerCase","toFixed","total","weekOfYear","performance","useState","quarters","setQuarters","selectedQuarter","setSelectedQuarter","useEffect","quarterStart","_quarters","firstStatsDay","startDate","endDate","dateKey","generateStats","weekDate","lastQuarter","currentQuarterId","returns","weekStats","toString","positions","push","year","slice","reverse","TradingPerformanceGraph"],"sourceRoot":""}