{"version":3,"file":"component---src-pages-signal-providers-index-js-caa0d1e1d50696269263.js","mappings":"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","sources":["webpack://zignaly-webapp/./src/pages/signalProviders/browse/index.js","webpack://zignaly-webapp/./src/pages/signalProviders/edit/index.js","webpack://zignaly-webapp/./src/hooks/useProviderContext.js","webpack://zignaly-webapp/./src/pages/signalProviders/index.js","webpack://zignaly-webapp/./src/pages/signalProviders/news/index.js","webpack://zignaly-webapp/./src/pages/signalProviders/profile/index.js","webpack://zignaly-webapp/./src/pages/signalProviders/providerAnalytics/index.js","webpack://zignaly-webapp/./src/pages/signalProviders/users/index.js","webpack://zignaly-webapp/./node_modules/lodash/_baseFindIndex.js","webpack://zignaly-webapp/./node_modules/lodash/findIndex.js","webpack://zignaly-webapp/./node_modules/lodash/toFinite.js","webpack://zignaly-webapp/./node_modules/lodash/toInteger.js"],"sourcesContent":["import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { useIntl } from \"react-intl\";\nimport withProvidersLayout from \"../../../layouts/providersLayout/withProvidersLayout\";\nimport { Helmet } from \"react-helmet\";\nimport ProvidersBrowse from \"../../../components/Providers/ProvidersBrowse\";\nimport \"./signalProvidersBrowse.scss\";\n\n/**\n * @typedef {Object} SignalProvidersBrowsePropTypes\n * @property {boolean} showFilters Flag to indicate if filters should be rendered.\n * @property {boolean} showSort Flag to indicate if sort options should be rendered.\n * @property {function} toggleFilters Callback that delegate filters toggle state to caller.\n * @property {function} toggleSort Callback that delegate sort toggle state to caller.\n * @property {function} setModifiedFiltersCount Callback that delegate modifiedFiltersCount to caller.\n */\n\n/**\n * Provides a list to browse signal providers.\n *\n * @param {SignalProvidersBrowsePropTypes} props Component properties.\n * @returns {JSX.Element} Component JSX.\n */\nconst SignalProvidersBrowse = (props) => {\n  const { showFilters, showSort, toggleFilters, toggleSort, setModifiedFiltersCount } = props;\n  const intl = useIntl();\n\n  return (\n    <Box className=\"spBrowsePage\">\n      <Helmet>\n        <title>\n          {`${intl.formatMessage({\n            id: \"menu.signalproviders\",\n          })} - ${intl.formatMessage({\n            id: \"srv.marketplace\",\n          })} | ${intl.formatMessage({ id: \"product\" })}`}\n        </title>\n      </Helmet>\n\n      <ProvidersBrowse\n        setModifiedFiltersCount={setModifiedFiltersCount}\n        showFilters={showFilters}\n        showSort={showSort}\n        toggleFilters={toggleFilters}\n        toggleSort={toggleSort}\n        type=\"signal_providers\"\n      />\n    </Box>\n  );\n};\n\nexport default withProvidersLayout(SignalProvidersBrowse);\n","import React from \"react\";\nimport \"./edit.scss\";\nimport { Box } from \"@material-ui/core\";\nimport EditProfileForm from \"../../../components/Forms/EditProfileForm\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport { Helmet } from \"react-helmet\";\nimport { useIntl } from \"react-intl\";\n\nconst SignalProvidersEdit = () => {\n  const storeViews = useStoreViewsSelector();\n  const intl = useIntl();\n\n  return (\n    <Box\n      alignItems=\"center\"\n      className=\"signalProviderEditPage\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      <Helmet>\n        <title>\n          {`${storeViews.provider.name} - ${intl.formatMessage({\n            id: \"srv.edit\",\n          })} | ${intl.formatMessage({ id: \"product\" })}`}\n        </title>\n      </Helmet>\n      {<EditProfileForm provider={storeViews.provider} />}\n    </Box>\n  );\n};\n\nexport default SignalProvidersEdit;\n","import { useState } from \"react\";\n\n/**\n * @typedef {import(\"../context/ProviderContext\").ProviderContextObject} ProviderContextObject\n */\n\n/**\n * Handle un-persisted state management for the different parts of app using React context.\n *\n * @returns {ProviderContextObject} App context object.\n */\nconst useProviderContext = () => {\n  const [hasAllocated, setHasAllocated] = useState(true);\n\n  return {\n    hasAllocated,\n    setHasAllocated,\n  };\n};\n\nexport default useProviderContext;\n","import React, { useEffect, useState } from \"react\";\nimport { Router } from \"@reach/router\";\nimport Profile from \"./profile\";\nimport Edit from \"./edit\";\nimport Settings from \"./settings\";\nimport Analytics from \"./providerAnalytics\";\nimport Users from \"./users\";\nimport News from \"./news\";\nimport useSelectedExchange from \"hooks/useSelectedExchange\";\nimport useStoreViewsSelector from \"../../hooks/useStoreViewsSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { getProvider, unsetProvider } from \"../../store/actions/views\";\nimport { withPrefix } from \"gatsby\";\nimport ProviderLayout from \"../../layouts/ProviderLayout\";\nimport { ProviderRoute as SignalProviderRoute } from \"../../components/RouteComponent/RouteComponent\";\nimport BrowsePage from \"./browse\";\nimport tradeApi from \"../../services/tradeApiClient\";\nimport { showErrorAlert } from \"store/actions/ui\";\nimport useProviderContext from \"hooks/useProviderContext\";\nimport ProviderContext from \"../../context/ProviderContext\";\nimport { checkAllocated } from \"../../utils/helpers\";\nimport useExchangeQuotes from \"hooks/useExchangeQuotes\";\n\n/**\n * @typedef {import(\"../../services/tradeApiClient.types\").ProviderExchangeSettingsObject} ProviderExchangeSettingsObject\n * @typedef {import(\"../../services/tradeApiClient.types\").QuoteAssetsDict} QuoteAssetsDict\n\n * @typedef {Object} LocationObject\n * @property {String} pathname\n */\n\n/**\n * @typedef {Object} ProviderProps\n * @property {LocationObject} location position ID dynamic route path parameter.\n */\n\n/**\n * Position detail page component.\n *\n * @param {ProviderProps} props Component properties.\n * @returns {JSX.Element} Position page element.\n */\n\nconst SignalProviders = (props) => {\n  const { location } = props;\n  const selectedExchange = useSelectedExchange();\n  const { provider } = useStoreViewsSelector();\n  // On production the application is served through an /app directory, ID position is +1 level.\n  const idIndex = process.env.GATSBY_BASE_PATH === \"\" ? 2 : 3;\n  const providerId = location.pathname.split(\"/\")[idIndex];\n  const dispatch = useDispatch();\n  const providerContext = useProviderContext();\n  const { setHasAllocated } = providerContext;\n  const [settings, setSettings] = useState(null);\n  const { quoteAssets } = useExchangeQuotes({\n    exchangeId: selectedExchange.exchangeId,\n    exchangeType: selectedExchange.exchangeType,\n  });\n  const quotes =\n    selectedExchange.name.toLowerCase() === \"bitmex\"\n      ? { BTC: { quote: \"BTC\", minNotional: 0 } }\n      : quoteAssets;\n  const quotesAvailable = Object.keys(quotes).length > 0;\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      dispatch(unsetProvider());\n      const payload = {\n        providerId: providerId,\n        exchangeInternalId: selectedExchange.internalId,\n      };\n      dispatch(getProvider(payload, true));\n    };\n    if (providerId && providerId.length === 24) {\n      loadProvider();\n    }\n\n    return () => {\n      setHasAllocated(true);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [providerId]);\n\n  /**\n   * Load exchange settings from backend.\n   *\n   * @returns {void}\n   */\n  const loadSettings = () => {\n    if (\n      provider.id &&\n      !provider.disable &&\n      provider.exchangeInternalId === selectedExchange.internalId &&\n      quotesAvailable\n    ) {\n      const payload = {\n        providerId: provider.id,\n        internalExchangeId: selectedExchange.internalId,\n      };\n      tradeApi\n        .providerExchangeSettingsGet(payload)\n        .then((response) => {\n          setSettings(response);\n          checkAllocated(quotes, response, setHasAllocated);\n        })\n        .catch((e) => {\n          dispatch(showErrorAlert(e));\n        });\n    }\n  };\n\n  useEffect(loadSettings, [\n    selectedExchange.internalId,\n    provider.id,\n    quotesAvailable,\n    provider.disable,\n  ]);\n\n  if (!providerId) {\n    // Render Browse page\n    return <BrowsePage {...props} />;\n  }\n\n  const allowAdminRoutes = provider.isAdmin && !provider.isClone;\n\n  return (\n    <ProviderContext.Provider value={providerContext}>\n      <ProviderLayout>\n        <Router>\n          <SignalProviderRoute\n            component={Profile}\n            default\n            path={withPrefix(\"/signalProviders/:providerId\")}\n            providerId={providerId}\n          />\n          {allowAdminRoutes && (\n            <SignalProviderRoute\n              component={Edit}\n              path={withPrefix(\"/signalProviders/:providerId/edit\")}\n              providerId={providerId}\n            />\n          )}\n          {!provider.disable && provider.exchangeInternalId === selectedExchange.internalId && (\n            <SignalProviderRoute\n              component={Settings}\n              loadData={loadSettings}\n              path={withPrefix(\"/signalProviders/:providerId/settings\")}\n              providerId={providerId}\n              quotes={quotes}\n              settings={settings}\n            />\n          )}\n          <SignalProviderRoute\n            component={Analytics}\n            path={withPrefix(\"/signalProviders/:providerId/analytics\")}\n            providerId={providerId}\n          />\n          {allowAdminRoutes && (\n            <SignalProviderRoute\n              component={Users}\n              path={withPrefix(\"/signalProviders/:providerId/users\")}\n              providerId={providerId}\n            />\n          )}\n          <SignalProviderRoute\n            component={News}\n            path={withPrefix(\"/signalProviders/:providerId/feed\")}\n            providerId={providerId}\n          />\n        </Router>\n      </ProviderLayout>\n    </ProviderContext.Provider>\n  );\n};\n\nexport default SignalProviders;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Wall from \"../../../components/Provider/News/Wall\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport { useIntl } from \"react-intl\";\n\nconst SignalProviderNews = () => {\n  const intl = useIntl();\n  const storeViews = useStoreViewsSelector();\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`${storeViews.provider.name} - ${intl.formatMessage({\n            id: \"srv.newsfeed\",\n          })}`}\n        </title>\n      </Helmet>\n      <Wall provider={storeViews.provider} />\n    </>\n  );\n};\n\nexport default SignalProviderNews;\n","import React from \"react\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport Profile from \"../../../components/Provider/Profile\";\n\nconst SignalProvidersProfile = () => {\n  const storeViews = useStoreViewsSelector();\n\n  return <Profile provider={storeViews.provider} />;\n};\n\nexport default SignalProvidersProfile;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { useIntl } from \"react-intl\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport { Helmet } from \"react-helmet\";\nimport Analytics from \"../../../components/Provider/Analytics\";\n\nconst SignalProvidersAnalytics = () => {\n  const storeViews = useStoreViewsSelector();\n  const intl = useIntl();\n\n  return (\n    <Box className=\"profileAnalyticsPage\">\n      <Helmet>\n        <title>\n          {`${storeViews.provider.name} - ${intl.formatMessage({\n            id: \"srv.analytics\",\n          })} | ${intl.formatMessage({ id: \"product\" })}`}\n        </title>\n      </Helmet>\n      <Analytics provider={storeViews.provider} />\n    </Box>\n  );\n};\n\nexport default SignalProvidersAnalytics;\n","import React from \"react\";\nimport \"./users.scss\";\nimport { Box } from \"@material-ui/core\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport { Helmet } from \"react-helmet\";\nimport { useIntl } from \"react-intl\";\nimport ProviderUsers from \"../../../components/Provider/ProviderUsers\";\n\nconst SignalProvidersUsers = () => {\n  const storeViews = useStoreViewsSelector();\n  const intl = useIntl();\n\n  return (\n    <Box\n      alignItems=\"center\"\n      className=\"profileUsersPage\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n    >\n      <Helmet>\n        <title>\n          {`${storeViews.provider.name} - ${intl.formatMessage({\n            id: \"srv.users\",\n          })} | ${intl.formatMessage({ id: \"product\" })}`}\n        </title>\n      </Helmet>\n      <ProviderUsers provider={storeViews.provider} />\n    </Box>\n  );\n};\n\nexport default SignalProvidersUsers;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"],"names":["withProvidersLayout","props","showFilters","showSort","toggleFilters","toggleSort","setModifiedFiltersCount","intl","useIntl","className","formatMessage","id","type","storeViews","useStoreViewsSelector","alignItems","display","flexDirection","justifyContent","provider","name","useState","hasAllocated","setHasAllocated","location","selectedExchange","useSelectedExchange","providerId","pathname","split","dispatch","useDispatch","providerContext","useProviderContext","settings","setSettings","quoteAssets","useExchangeQuotes","exchangeId","exchangeType","quotes","toLowerCase","BTC","quote","minNotional","quotesAvailable","Object","keys","length","useEffect","loadProvider","unsetProvider","payload","exchangeInternalId","internalId","getProvider","loadSettings","disable","internalExchangeId","tradeApi","then","response","checkAllocated","catch","e","showErrorAlert","allowAdminRoutes","isAdmin","isClone","ProviderContext","Provider","value","ProviderLayout","Router","component","Profile","default","path","withPrefix","Edit","Settings","loadData","Analytics","Users","News","module","exports","array","predicate","fromIndex","fromRight","index","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","toNumber","INFINITY","toFinite","result","remainder"],"sourceRoot":""}