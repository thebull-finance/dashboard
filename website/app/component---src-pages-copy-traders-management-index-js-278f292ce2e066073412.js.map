{"version":3,"file":"component---src-pages-copy-traders-management-index-js-278f292ce2e066073412.js","mappings":"sIAwBA,IAZ8B,WAS5B,OAAOA,EAAAA,EAAAA,KAFkB,SAACC,GAAD,OAAWA,EAAMC,W,6GCqB5C,UA3B8B,WAC5B,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAmBC,EAAAA,EAAAA,KACnBC,GAAOC,EAAAA,EAAAA,KAEb,OACE,gBAAC,IAAD,CAAKC,UAAU,yBACb,gBAAC,IAAD,KACE,6BACMN,EAASO,KADf,MACyBH,EAAKI,cAAc,CACxCC,GAAI,mBAFR,MAGUL,EAAKI,cAAc,CAAEC,GAAI,cAGpCT,EAASU,eAAyD,YAAxCV,EAASW,aAAaC,eAC/C,gBAAC,KAAD,CAAgCZ,SAAUA,EAAUE,iBAAkBA,IAEvEF,EAASU,eAAyD,SAAxCV,EAASW,aAAaC,eAC/C,gBAAC,KAAD,CAA6BZ,SAAUA,EAAUE,iBAAkBA,KAEnEF,EAASU,eACT,gBAAC,KAAD,CAAkBV,SAAUA,EAAUE,iBAAkBA","sources":["webpack://zignaly-webapp/./src/hooks/useStoreViewsSelector.js","webpack://zignaly-webapp/./src/pages/copyTraders/management/index.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\n\n/**\n * @typedef {import(\"../store/initialState\").DefaultState} DefaultStateType\n * @typedef {import(\"../store/initialState\").DefaultViewsObject} DefaultViewsObject\n */\n\n/**\n * Select Redux store views data.\n *\n * @returns {DefaultViewsObject} Views object from redux store.\n */\nconst useStoreViewsSelector = () => {\n  /**\n   * Select store views data.\n   *\n   * @param {DefaultStateType} state Application store data.\n   * @returns {DefaultViewsObject} Store views data.\n   */\n  const selectStoreViews = (state) => state.views;\n\n  return useSelector(selectStoreViews);\n};\n\nexport default useStoreViewsSelector;\n","import React from \"react\";\nimport \"./management.scss\";\nimport { Box } from \"@material-ui/core\";\nimport useStoreViewsSelector from \"../../../hooks/useStoreViewsSelector\";\nimport { Helmet } from \"react-helmet\";\nimport { useIntl } from \"react-intl\";\nimport useSelectedExchange from \"hooks/useSelectedExchange\";\nimport {\n  FuturesProfitSharingManagement,\n  SpotProfitSharingManagement,\n  TraderManagement,\n} from \"components/Provider/ProviderManagement\";\n\nconst CopyTradersManagement = () => {\n  const { provider } = useStoreViewsSelector();\n  const selectedExchange = useSelectedExchange();\n  const intl = useIntl();\n\n  return (\n    <Box className=\"profileManagementPage\">\n      <Helmet>\n        <title>\n          {`${provider.name} - ${intl.formatMessage({\n            id: \"srv.management\",\n          })} | ${intl.formatMessage({ id: \"product\" })}`}\n        </title>\n      </Helmet>\n      {provider.profitSharing && provider.exchangeType.toLowerCase() === \"futures\" && (\n        <FuturesProfitSharingManagement provider={provider} selectedExchange={selectedExchange} />\n      )}\n      {provider.profitSharing && provider.exchangeType.toLowerCase() === \"spot\" && (\n        <SpotProfitSharingManagement provider={provider} selectedExchange={selectedExchange} />\n      )}\n      {!provider.profitSharing && (\n        <TraderManagement provider={provider} selectedExchange={selectedExchange} />\n      )}\n    </Box>\n  );\n};\n\nexport default CopyTradersManagement;\n"],"names":["useSelector","state","views","provider","useStoreViewsSelector","selectedExchange","useSelectedExchange","intl","useIntl","className","name","formatMessage","id","profitSharing","exchangeType","toLowerCase"],"sourceRoot":""}